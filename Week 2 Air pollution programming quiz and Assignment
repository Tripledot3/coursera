> pollutantmean <- function(directory, pollutant, id = 1:332) {
+   
+   ##setwd(file.path(getwd(), directory)) ## setting the directory
+   total = 0                            ## the sum of all observed values of pollutant (either sulfate or nitrate)
+   observations = 0                     ## the total number of observed values of pollutant (either sulfate or nitrate)
+   
+   #Looping thru the directory's files specified in the 'id' argument 
+   for (i in id)
+ {
+     
+     
+       ## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient, 
+       ## but at the time of the completion of this assignment, it was the only way I knew how to do it.           
+       if (i <10) { 
+                          data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " "))
+                  }
+       
+ else if (i>=10 & i<100) { 
+                          data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " ") 
+                                           )
+                         }
+                      
+        
+ 
+      else       { 
+                         data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
+                                          header = T, 
+                                          na.strings=c("NA","NaN", " ") 
+                                         )
+                 }
+   
+   ## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
+  data = na.omit(data)    
+  ##  cumulative addition of the complete observations
+  observations = observations + nrow(data)
+  ## depending the poluttant ( sulfate or nitrate), we aggregate the observed values
+   if (pollutant == "sulfate") {total = total + sum(data$sulfate)}
+  else {total = total + sum(data$nitrate)}
+ 
+ }
+   
+   ## reset directory path
+   ##setwd("..")
+   ## returning the mean of the pollutant values
+   return (total/observations)
+ 
+ }
> pollutantmean("specdata", "sulfate", 1:10)
[1] 4.064128
> pollutantmean("specdata", "nitrate", 70:72)
[1] 1.732979
> pollutantmean("specdata", "nitrate", 23)
[1] 1.280833
> pollutantmean("specdata", "sulfate", 34)
[1] 1.477143
> pollutantmean("specdata", "nitrate")
[1] 1.707625
> complete <- function(directory, id = 1:332) {
+   
+   
+   dataframe = NULL  ## initializing the dataframe we want from this function   
+   ##setwd(file.path(getwd(), directory)) ## setting the directory
+   
+   #Looping thru the directory's files specified in the 'id' argument 
+   for (i in id)
+ {
+     
+     
+       ## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient, 
+       ## but at the time of the completion of this assignment, it was the only way I knew how to do it.           
+       if (i <10) { 
+                          data <- read.csv(paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " "))
+                  }
+       
+ else if (i>=10 & i<100) { 
+                          data <- read.csv(paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " ") 
+                                           )
+                         }
+                      
+        
+ 
+      else       { 
+                         data <- read.csv(paste(as.character(i), ".csv", sep=""),     ## Normal
+                                          header = T, 
+                                          na.strings=c("NA","NaN", " ") 
+                                         )
+                 }
+   
+   ## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
+     data = na.omit(data) 
+  ##  make it a matrix to easily fill each successive row of our dataframe
+     data = as.matrix(data)
+     dataframe = rbind(dataframe, c(i,nrow(data))) # fill each successive row of our dataframe. Each row contains the monitor ID,
+                                                   # and its total complete observed cases (no rows containg NAs)
+     
+     
+     
+   }
+   
+   ##setwd("..")  # reseting working directory path
+   dataframe = data.frame(dataframe)  # from matix to data frame 
+   names(dataframe) = c('id', 'nobs') # set the column names of the data frame
+   return (dataframe) 
+ }
> complete("specdata", 1)
  id nobs
1  1  117
> complete("specdata", c(2, 4, 8, 10, 12))
  id nobs
1  2 1041
2  4  474
3  8  192
4 10  148
5 12   96
> complete("specdata", 30:25)
  id nobs
1 30  932
2 29  711
3 28  475
4 27  338
5 26  586
6 25  463
> complete("specdata", 3)
  id nobs
1  3  243
> corr <- function(directory, threshold = 0) {
+ ##setwd(file.path(getwd(), directory)) ## setting the directory
+ 
+ correlationVector = NULL ## initializing the correlation matrix
+               
+   #Looping thru ALL the directory's files 
+   for (i in 1:332)
+ {
+     
+     
+       ## Due to the format of the filename, i.e 001, 010  instead of 1, 10. I became aware that the following method works but not efficient, 
+       ## but at the time of the completion of this assignment, it was the only way I knew how to do it.           
+       if (i <10) { 
+                          data <- read.csv(
+                                           paste("0","0", as.character(i), ".csv", sep=""),  ## for example, if 'id' =7, we get 007.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " ")
+                                           
+                                           )
+                  }
+       
+ else if (i>=10 & i<100) { 
+                          data <- read.csv(
+                                           paste("0", as.character(i), ".csv", sep=""),  ## for example, if 'id' = 17, we get 017.csv
+                                           header = T, 
+                                           na.strings=c("NA","NaN", " ") 
+                                           
+                                           )
+                         }
+                      
+        
+ 
+      else       { 
+                         data <- read.csv(
+                                          paste(as.character(i), ".csv", sep=""),     ## Normal
+                                          header = T, 
+                                          na.strings=c("NA","NaN", " ") 
+                                         
+                                          )
+                 }
+   
+     ## getting rid of all the "NA" values and, consequently, all the non-complete ovservations (the ones with at least one NA in row)
+     data = na.omit(data) 
+     
+     ## if the number of complete observed cases meets the quota, find the correlation between the pollutants for the given monitor AND
+     ## store the results in the correlation matrix
+     if (nrow(data) > threshold) {
+                                   correlationVector = c(correlationVector, cor(data[,2], data[,3]))
+                                }
+     
+     
+   }
+   
+   
+   
+   ##setwd("..")  # reseting working directory path
+   return (correlationVector)
+ }
> cr <- corr("specdata", 150)
> head(cr); summary(cr)
[1] -0.01895754 -0.14051254 -0.04389737 -0.06815956 -0.12350667 -0.07588814
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.21057 -0.04999  0.09463  0.12525  0.26844  0.76313 
> cr <- corr("specdata", 400)
> head(cr); summary(cr)
[1] -0.01895754 -0.04389737 -0.06815956 -0.07588814  0.76312884 -0.15782860
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.17623 -0.03109  0.10021  0.13969  0.26849  0.76313 
> cr <- corr("specdata", 5000)
> head(cr); summary(cr) ; length(cr)
NULL
Length  Class   Mode 
     0   NULL   NULL 
[1] 0
> cr <- corr("specdata") # default threshold value  is ZERO
> head(cr); summary(cr) ; length(cr)
[1] -0.22255256 -0.01895754 -0.14051254 -0.04389737 -0.06815956 -0.12350667
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-1.00000 -0.05282  0.10718  0.13684  0.27831  1.00000 
[1] 323
> cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
> print(cc$nobs)
[1] 228 148 124 165 104 460 232
> cc <- complete("specdata", 54)
> print(cc$nobs)
[1] 219
> set.seed(42)
> cc <- complete("specdata", 332:1)
> use <- sample(332, 10)
> print(cc[use, "nobs"])
 [1] 711 135  74 445 178  73  49   0 687 237
> cr <- corr("specdata")                
> cr <- sort(cr)                
> set.seed(868)                
> out <- round(cr[sample(length(cr), 5)], 4)
> print(out)
[1]  0.2688  0.1127 -0.0085  0.4586  0.0447
> cr <- corr("specdata")                
> cr <- sort(cr)                
> set.seed(868)                
> out <- round(cr[sample(length(cr), 5)], 4)
> print(out)
[1]  0.2688  0.1127 -0.0085  0.4586  0.0447
> cr <- corr("specdata", 129)                
> cr <- sort(cr)                
> n <- length(cr)                
> set.seed(197)                
> out <- c(n, round(cr[sample(n, 5)], 4))
> print(out)
[1] 243.0000   0.2540   0.0504  -0.1462  -0.1680   0.5969
> cr <- corr("specdata", 2000)                
> n <- length(cr)                
> cr <- corr("specdata", 1000)                
> cr <- sort(cr)
> print(c(n, round(cr, 4)))
[1]  0.0000 -0.0190  0.0419  0.1901
> 
